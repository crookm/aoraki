name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

      - name: Install dotCover
        run: dotnet tool install -g JetBrains.dotCover.GlobalTool

      - name: Restore dependencies
        run: dotnet restore

      - name: SonarCloud begin analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # For PR info, if needed
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./.sonar/scanner/dotnet-sonarscanner begin /k:"crookm_aoraki" /o:"crookm" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.dotcover.reportsPaths=dotCover.Output.html

      - name: Build and Analyze
        run: dotnet build --no-restore -c Release

      - name: Test
        run: dotnet dotcover test --no-build -c Release --verbosity normal --dcReportType=HTML

      - name: SonarCloud end analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Publish
        run: dotnet publish --no-build src/Aoraki.Web/Aoraki.Web.csproj -c Release -o aoraki

      - name: Upload artifact
        uses: actions/upload-artifact@v2.2.2
        with:
          name: aoraki
          path: aoraki/**
          if-no-files-found: error

  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    environment:
      name: PROD
      url: https://mattcrook.io
    
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2.0.8
        with:
          name: aoraki
          path: aoraki

      - name: Authenticate
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy app
        uses: azure/webapps-deploy@v2
        with:
          app-name: aoraki-8acf69
          package: aoraki

      - name: Logout
        run: az logout
